#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define BUFFER_SIZE 1024

int main()
{
    int socket_c;
    struct sockaddr_in address_s;
    char buffer[BUFFER_SIZE];

    // Create the client socket

    socket_c = socket(AF_INET, SOCK_STREAM, 0);
    if (socket_c == -1)
    {
        perror("Socket creation failed");
      exit(1);
    }

    // Set up the server address

    address_s.sin_family = AF_INET;
    address_s.sin_port = htons(8443); // Use the same port as the server
    if (inet_pton(AF_INET, "192.168.79.132", &address_s.sin_addr) <= 0)
    {
        perror("Invalid address or address not supported");
        exit(1);
    }

    // Connect to the server
    if (connect(socket_c, (struct sockaddr *)&address_s, sizeof(address_s)) < 0)
    {
        perror("Connection failed");
        exit(1);
    }

// Receive the random number from the server
    int bytes_received = recv(socket_c, buffer, BUFFER_SIZE - 1, 0);
    if (bytes_received < 0)
    {
        perror("Receiving data failed");
        exit(1);
    }

    // Null-terminate the received data
    buffer[bytes_received] = '\0';

    // Print the received random number
    printf("Received random number: %s\n", buffer);

    // Close the client socket
    close(socket_c);

    return 0;

}
